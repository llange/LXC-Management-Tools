#!/bin/sh -
# lxc-shutdown-agent
# Monitor a container's runlevel and tasklist and perform lxc-stop/start
# on the containers behalf to emulate hardware shutdown or reboot.
# Perform lxc-stop if container goes to runlevel 0
# Perform lxc-stop;lxc-start if container goes to runlevel 6
# When doing lxc-stop, wait for task list to reach less than 2 first.
#
# Based on:
# http://www.mail-archive.com/lxc-users@lists.sourceforge.net/msg00074.html
#
# run from /etc/init.d/lxc
# When the rc start script starts a container, it also runs this in the
# background to monitor that container.
#
# Requires intotifywait, which is neither installed by default nor even
# available in the standard oss non-oss repos. You have to get the package
# "inotify-tools" from the "Education" or "home:aljex" repos.
#
# 20100212 - Brian K. White - brian@aljex.com

LXC_ETC=/etc/lxc
LXC_LIB=/var/lib/lxc
CGROUP_MOUNT=/cgroup
LXC_CONF=${LXC_ETC}/lxc.conf
[[ -s $LXC_CONF ]] && . $LXC_CONF

self=$0
VM=$1
VM_CFG=${LXC_LIB}/${VM}/config

abrt () { echo "${self}: $@" ; exit 1 ; }

stop_vm () {
	# we don' need no steenkeeng `wc -l ...`
	t=${CGROUP_MOUNT}/${VM}/tasks
	n=2
	while [[ $n -gt 1 ]] ; do
		n=0
		[[ -s $t ]] || break
		while read ;do ((n++)) ;done <$t ;inotifywait $t
	done
	lxc-stop -n $VM
	lxc-wait -n $VM -s STOPPED
}

start_vm () { screen -dmS init-$VM lxc-start -f $VM_CFG -n $VM ; }

VM_STATE=`lxc-info -n $VM` VM_STATE=${VM_STATE##* }
[[ "$VM_STATE" = "RUNNING" ]] || abrt "Container \"$VM\" is not running."

unset VM_ROOTFS
while read a b c ;do [[ "$a" = "lxc.rootfs" ]] && VM_ROOTFS="$c" ;done <$VM_CFG
[ -f "$VM_ROOTFS" ] || VM_ROOTFS=$( readlink -e ${LXC_LIB}/${VM}/rootfs/rootfs )
[[ "$VM_ROOTFS" ]] || abrt "Could not determine rootfs for container \"$VM\"."
VM_UTMP=${VM_ROOTFS}/var/run/utmp

sleep 1

while inotifywait -qq $VM_UTMP ; do
	RUNLEVEL=`runlevel $VM_UTMP`
	case "${RUNLEVEL}" in
		N??) : ;;
		??0) stop_vm ; break ;;
		??6) stop_vm ; start_vm ;;
	esac
done
